"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["34753"],{41452:function(e,t,n){n.d(t,{A:()=>r});let r={tabItem:"tabItem_pnkT"}},18416:function(e,t,n){n.d(t,{A:()=>r});let r={tabList:"tabList_Qoir",tabItem:"tabItem_AQgk"}},10682:function(e,t,n){n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>u,default:()=>h,frontMatter:()=>i,metadata:()=>r,someExport:()=>d,toc:()=>p});var r=n(66092),l=n(74848),s=n(56151),a=n(14729),o=n(13899);let i={title:"Blog post MDX Feed tests",authors:["slorber"],tags:["paginated-tag","blog","docusaurus","long-long","long-long-long","long-long-long-long"],hide_reading_time:!0},u,c={authorsImageUrls:[void 0]},d=42,p=[{value:"Imports",id:"imports",level:2},{value:"Exports",id:"exports",level:2},{value:"Tabs test",id:"tabs-test",level:2}];function g(e){let t={code:"code",h2:"h2",p:"p",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.p,{children:"Some MDX tests, mostly to test how the RSS feed render those"}),"\n","\n",(0,l.jsx)(t.h2,{id:"imports",children:"Imports"}),"\n",(0,l.jsx)(t.p,{children:"Here are some imports:"}),"\n","\n",(0,l.jsx)(t.h2,{id:"exports",children:"Exports"}),"\n",(0,l.jsx)(t.p,{children:"Here are some exports:"}),"\n","\n",(0,l.jsx)(t.h2,{id:"tabs-test",children:"Tabs test"}),"\n",(0,l.jsx)(t.p,{children:"Here are some tabs:"}),"\n",(0,l.jsxs)(a.A,{children:[(0,l.jsx)(o.A,{value:"apple",label:"Apple",children:(0,l.jsx)(t.p,{children:"This is an apple \u{1F34E}"})}),(0,l.jsx)(o.A,{value:"orange",label:"Orange",children:(0,l.jsx)(t.p,{children:"This is an orange \u{1F34A}"})})]}),"\n",(0,l.jsxs)(t.p,{children:["Here are some tabs, inside ",(0,l.jsx)(t.code,{children:"mdx-code-block"}),":"]}),"\n",(0,l.jsxs)(a.A,{children:[(0,l.jsx)(o.A,{value:"apple",label:"Apple",children:(0,l.jsx)(t.p,{children:"This is an apple \u{1F34E}"})}),(0,l.jsx)(o.A,{value:"orange",label:"Orange",children:(0,l.jsx)(t.p,{children:"This is an orange \u{1F34A}"})})]})]})}function h(e={}){let{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(g,{...e})}):g(e)}},13899:function(e,t,n){n.d(t,{A:()=>a});var r=n(74848);n(96540);var l=n(11118),s=n(41452);function a({children:e,hidden:t,className:n}){return(0,r.jsx)("div",{role:"tabpanel",className:(0,l.A)(s.A.tabItem,n),hidden:t,children:e})}},14729:function(e,t,n){n.d(t,{A:()=>g});var r=n(74848),l=n(96540),s=n(11118),a=n(31191),o=n(17060),i=n(30926),u=n(18416);function c({className:e,block:t,selectedValue:n,selectValue:l,tabValues:o}){let i=[],{blockElementScrollPositionUntilNextRender:c}=(0,a.a_)(),d=e=>{let t=e.currentTarget,r=o[i.indexOf(t)].value;r!==n&&(c(t),l(r))},p=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{let n=i.indexOf(e.currentTarget)+1;t=i[n]??i[0];break}case"ArrowLeft":{let n=i.indexOf(e.currentTarget)-1;t=i[n]??i[i.length-1]}}t?.focus()};return(0,r.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":t},e),children:o.map(({value:e,label:t,attributes:l})=>(0,r.jsx)("li",{role:"tab",tabIndex:n===e?0:-1,"aria-selected":n===e,ref:e=>{i.push(e)},onKeyDown:p,onClick:d,...l,className:(0,s.A)("tabs__item",u.A.tabItem,l?.className,{"tabs__item--active":n===e}),children:t??e},e))})}function d({lazy:e,children:t,selectedValue:n}){let a=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){let e=a.find(e=>e.props.value===n);return e?(0,l.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,r.jsx)("div",{className:"margin-top--md",children:a.map((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==n}))})}function p(e){let t=(0,o.u)(e);return(0,r.jsxs)("div",{className:(0,s.A)("tabs-container",u.A.tabList),children:[(0,r.jsx)(c,{...t,...e}),(0,r.jsx)(d,{...t,...e})]})}function g(e){let t=(0,i.A)();return(0,r.jsx)(p,{...e,children:(0,o.v)(e.children)},String(t))}},17060:function(e,t,n){n.d(t,{u:()=>d,v:()=>u});var r=n(96540),l=n(49519),s=n(57190),a=n(11864),o=n(84329),i=n(34123);function u(e){return r.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){let{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function c({value:e,tabValues:t}){return t.some(t=>t.value===e)}function d(e){let t,{defaultValue:n,queryString:d=!1,groupId:p}=e,g=function(e){let{values:t,children:n}=e;return(0,r.useMemo)(()=>{let e=t??u(n).map(({props:{value:e,label:t,attributes:n,default:r}})=>({value:e,label:t,attributes:n,default:r})),r=(0,o.XI)(e,(e,t)=>e.value===t.value);if(r.length>0)throw Error(`Docusaurus error: Duplicate values "${r.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`);return e},[t,n])}(e),[h,b]=(0,r.useState)(()=>(function({defaultValue:e,tabValues:t}){if(0===t.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!c({value:e,tabValues:t}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}let n=t.find(e=>e.default)??t[0];if(!n)throw Error("Unexpected error: 0 tabValues");return n.value})({defaultValue:n,tabValues:g})),[m,f]=function({queryString:e=!1,groupId:t}){let n=(0,l.W6)(),s=function({queryString:e=!1,groupId:t}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,a.aZ)(s),(0,r.useCallback)(e=>{if(!s)return;let t=new URLSearchParams(n.location.search);t.set(s,e),n.replace({...n.location,search:t.toString()})},[s,n])]}({queryString:d,groupId:p}),[x,v]=function({groupId:e}){let t=e?`docusaurus.tab.${e}`:null,[n,l]=(0,i.Dv)(t);return[n,(0,r.useCallback)(e=>{t&&l.set(e)},[t,l])]}({groupId:p}),j=c({value:t=m??x,tabValues:g})?t:null;return(0,s.A)(()=>{j&&b(j)},[j]),{selectedValue:h,selectValue:(0,r.useCallback)(e=>{if(!c({value:e,tabValues:g}))throw Error(`Can't select invalid tab value=${e}`);b(e),f(e),v(e)},[f,v,g]),tabValues:g}}},56151:function(e,t,n){n.d(t,{R:()=>a,x:()=>o});var r=n(96540);let l={},s=r.createContext(l);function a(e){let t=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),r.createElement(s.Provider,{value:t},e.children)}},66092:function(e){e.exports=JSON.parse('{"permalink":"/tests/blog/2021/10/07/blog-post-mdx-feed-tests","editUrl":"https://github.com/facebook/docusaurus/edit/main/website/_dogfooding/_blog-tests/_dogfooding/_blog tests/2021-10-07-blog-post-mdx-feed-tests.mdx","source":"@site/_dogfooding/_blog tests/2021-10-07-blog-post-mdx-feed-tests.mdx","title":"Blog post MDX Feed tests","description":"Some MDX tests, mostly to test how the RSS feed render those","date":"2021-10-07T00:00:00.000Z","tags":[{"inline":false,"label":"Paginated-tag","permalink":"/tests/blog/tags/paginated-tag"},{"inline":false,"label":"Blog","permalink":"/tests/blog/tags/blog"},{"inline":false,"label":"Docusaurus","permalink":"/tests/blog/tags/docusaurus"},{"inline":false,"label":"Long-long","permalink":"/tests/blog/tags/long-long"},{"inline":false,"label":"Long-long-long","permalink":"/tests/blog/tags/long-long-long"},{"inline":false,"label":"Long-long-long-long","permalink":"/tests/blog/tags/long-long-long-long"}],"hasTruncateMarker":true,"authors":[{"name":"Sebastien Lorber","title":"Docusaurus maintainer","url":"https://sebastienlorber.com","page":{"permalink":"/tests/blog/authors/slorber"},"socials":{"x":"https://x.com/sebastienlorber"},"imageURL":"https://github.com/slorber.png","key":"slorber"}],"frontMatter":{"title":"Blog post MDX Feed tests","authors":["slorber"],"tags":["paginated-tag","blog","docusaurus","long-long","long-long-long","long-long-long-long"],"hide_reading_time":true},"unlisted":false,"prevItem":{"title":"Blog post MDX require Feed tests","permalink":"/tests/blog/2021/10/08/blog-post-mdx-require-feed-tests"},"nextItem":{"title":"Post with duplicate title","permalink":"/tests/blog/2021/09/13/dup-title"}}')}}]);